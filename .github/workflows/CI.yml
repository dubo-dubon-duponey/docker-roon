name: CI

on: [push, pull_request]

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Enable cache
        uses: actions/cache@v2.1.1
        with:
          path: $GITHUB_WORKSPACE/cache
          key: cache

        # XXX move to container tooling
      - name: Install hadolint and shellcheck
        run: |
          curl --proto '=https' --tlsv1.3 -sSfL -o hadolint "https://github.com/hadolint/hadolint/releases/download/v2.6.0/hadolint-$(uname -s)-$(uname -m)"
          chmod 700 ./hadolint
          curl --proto '=https' --tlsv1.3 -sSfL -o shellcheck.tar.xz "https://github.com/koalaman/shellcheck/releases/download/v0.7.2/shellcheck-v0.7.2.linux.$(uname -m).tar.xz"
          tar -xf shellcheck.tar.xz
          mv ./shellcheck-v0.7.2/shellcheck .

      # XXX update this to a more recent apt proxy
      - name: Start apt proxy
        run: |
          # Hiding the read-only token base64 to avoid github disabling it...
          echo OWMyMGVhYzk4N2NhYWQxYmI3MzhmNTZkODNmOGMwOGJjZjlhNDc4YQo= | base64 -d | docker login ghcr.io -u dubo-dubon-duponey --password-stdin
          mkdir -p "$GITHUB_WORKSPACE/cache/apt"
          mkdir -p "$GITHUB_WORKSPACE/cache/certs"
          sudo chown -R 2000:root "$GITHUB_WORKSPACE/cache"
          docker run --rm -d --expose 443 --expose 80 --pull always \
            --name apt-front \
            --read-only \
            --cap-drop=ALL \
            --cap-add=CAP_NET_BIND_SERVICE \
            --env TLS_AUTO=ignore_loaded_certs \
            --env TLS=internal \
            --env IS_PROXY=true \
            --env DOMAIN=apt-front.local \
            --env PORT=443 \
            --env PORT_HTTP=80 \
            --env ADDITIONAL_DOMAINS=*.debian.org \
            --volume "$GITHUB_WORKSPACE/cache/certs":/certs \
            --volume "$GITHUB_WORKSPACE/cache/apt":/data \
            ghcr.io/dubo-dubon-duponey/aptutil:bullseye-2021-08-01

      - name: test
        run: |
          # Start buildkit
          bkaddr="$(./hack/helpers/start-buildkit.sh)"
          # Set the path and install the tools
          export BIN_LOCATION="$(pwd)"
          ./hack/helpers/install-tools.sh
          export PATH="$BIN_LOCATION:$PATH"
          cd "$GITHUB_WORKSPACE"
          # Sanity check
          echo "Sanity checks"
          command -v "cue" > /dev/null || {
            echo "Cue installation had failed"
            exit 1
          }
          which cue
          cue version
          command -v "buildctl" > /dev/null || {
            echo "Cue installation had failed"
            exit 1
          }
          which buildctl
          buildctl --version
          buildctl --addr "$bkaddr" debug workers
          which hadolint
          hadolint --version
          which shellcheck
          shellcheck --version
          docker logs --tail 200 apt-front
          # Lint
          ./hack/lint.sh
          # Test, with our injected proxy and environment
          #  --inject apt_proxy="http://$(docker inspect apt-front | jq -rc .[0].NetworkSettings.Networks.bridge.IPAddress):4443"
          ./hack/test.sh \
            --inject bk="$bkaddr" \
            --inject ip="$(docker inspect apt-front | jq -rc .[0].NetworkSettings.Networks.bridge.IPAddress)" \
            --inject trust="$(sudo cat "$GITHUB_WORKSPACE/cache/certs/pki/authorities/local/root.crt")" \
            ".github/workflows/environment.cue"
